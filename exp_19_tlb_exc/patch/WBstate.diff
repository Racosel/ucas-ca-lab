--- E:\calab\ucas-ca-lab\exp_18_cpu_with_tlb\myCPU\WBstate.v
+++ E:\calab\ucas-ca-lab\exp_19_tlb_exc\myCPU\WBstate.v
@@ -16,7 +16,7 @@
     output      [52:0] wb_rf_all,// {rf_we, rf_waddr, rf_wdata_reg}
     input              cancel_exc_ertn_tlbflush,//canceled by exception or ereturn
     input       [79:0] mem_csr_rf,//{wb_res_from_csr,csr_wr,csr_wr_num,csr_mask,csr_wr_value}
-    input       [6 :0] mem_exc_rf,//{syscall,ertn}
+    input       [14:0] mem_exc_rf,//{syscall,ertn}
     //csr wr port
     output      [31:0] csr_wr_mask,
     output      [31:0] csr_wr_value,
@@ -28,7 +28,7 @@
     output     [13:0]  csr_rd_num,
     //csr exception related
     input       [31:0] mem_fault_vaddr,
-    output      [5 :0] wb_exc,//for extension
+    output      [13:0] wb_exc,//for extension
     output             ertn_flush,
     output      [31:0] wb_fault_vaddr,
     //tlb related
@@ -54,7 +54,7 @@
     reg  [4 :0] rf_waddr;
     reg         rf_we;
     reg  [79:0] wb_csr_rf_reg;
-    reg  [6 :0] wb_exc_rf_reg;
+    reg  [14:0] wb_exc_rf_reg;
     reg  [31:0] fault_vaddr_reg;
     // wire        wb_res_from_csr;
     wire        wb_csr_wr;
@@ -95,7 +95,7 @@
 
     always @(posedge clk) begin
         if(~resetn)
-            wb_exc_rf_reg <= 7'b0;
+            wb_exc_rf_reg <= 15'b0;
         else//revise because bug in pipe line, alu result was sent to sram without reg,if exc, it takes two cycles to arrive in mem,make it error
             wb_exc_rf_reg <= mem_exc_rf;
     end
@@ -119,7 +119,7 @@
     assign wb_rf_all  = {wb_csr_wr,csr_wr_num,truly_we, rf_waddr, rf_wdata} & {53{wb_valid}};
     assign {wb_csr_rd,wb_csr_wr,csr_wr_num,csr_wr_mask,csr_wr_value} = wb_csr_rf_reg;
     assign rf_wdata   = {32{~wb_csr_rd}} & rf_wdata_reg | {32{wb_csr_rd}} & csr_rd_value;
-    assign wb_exc     = wb_exc_rf_reg[6:1] & {6{wb_valid}};
+    assign wb_exc     = wb_exc_rf_reg[14:1] & {14{wb_valid}};
     assign ertn_flush = wb_exc_rf_reg[0] & wb_valid;
     assign wb_fault_vaddr = fault_vaddr_reg;
     /* debug info */
